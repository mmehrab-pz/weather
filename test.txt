<!doctype html>
<html lang="fa">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>PWA Weather API Tester</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-slate-50 text-slate-800 p-6 font-sans">

  <div class="max-w-4xl mx-auto">
    <h1 class="text-2xl font-bold mb-4">OpenWeatherMap — API Tester</h1>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
      <input id="apiKey" class="col-span-2 p-2 border rounded" placeholder="API Key — جایگزین کن: YOUR_API_KEY_HERE" value="ab1bcc592ad966be21f0817b800ba129"/>
      <input id="cityInput" class="p-2 border rounded" placeholder="نام شهر (مثلاً Tehran یا Tehran,IR)" />
    </div>

    <div class="flex gap-2 mb-4">
      <button id="btnFetch" class="px-4 py-2 bg-blue-600 text-white rounded">گرفتن وضعیت فعلی (weather)</button>
      <button id="btnForecast" class="px-4 py-2 bg-indigo-600 text-white rounded">گرفتن 5-day forecast</button>
      <button id="btnByCoords" class="px-4 py-2 bg-emerald-600 text-white rounded">گرفتن با مختصات (lat, lon)</button>
      <input id="lat" class="p-2 border rounded w-28" placeholder="lat" />
      <input id="lon" class="p-2 border rounded w-28" placeholder="lon" />
    </div>

    <div id="status" class="mb-4 text-sm text-slate-600">وضعیت: آماده</div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <!-- Parsed data -->
      <div class="bg-white p-4 rounded shadow">
        <h2 class="font-semibold mb-2">مقادیر پارسه‌شده</h2>
        <div id="parsed" class="space-y-2 text-sm text-slate-700">
          <div id="cityName"></div>
          <div id="coord"></div>
          <div id="weatherMain"></div>
          <div id="temperature"></div>
          <div id="humidity"></div>
          <div id="wind"></div>
          <div id="clouds"></div>
          <div id="visibility"></div>
          <div id="sun"></div>
          <div id="timezone"></div>
          <div id="rawInfoLink"></div>
        </div>
      </div>

      <!-- Raw JSON -->
      <div class="bg-white p-4 rounded shadow">
        <h2 class="font-semibold mb-2">Raw JSON</h2>
        <pre id="raw" class="text-xs overflow-auto max-h-96 bg-slate-50 p-2 rounded border"></pre>
      </div>
    </div>

    <div class="mt-6 bg-white p-4 rounded shadow">
      <h3 class="font-semibold mb-2">توضیحات / تست‌ها</h3>
      <ul class="list-disc pl-5 text-sm text-slate-700 space-y-1">
        <li>با کلیک روی <code>گرفتن وضعیت فعلی</code> درخواست به <code>/data/2.5/weather</code> فرستاده می‌شود.</li>
        <li>از قسمت <code>Raw JSON</code> می‌توان هر فیلد برگشتی را مشاهده کرد (مثلاً <code>weather[0].description</code>, <code>main.temp</code>, <code>wind.speed</code> و ...).</li>
        <li>برای تست مختصات، مقادیر lat و lon را وارد کرده و <code>گرفتن با مختصات</code> را بزن.</li>
        <li>اگر می‌خواهی اطلاعات 5 روزه را ببینی، <code>گرفتن 5-day forecast</code> را بزن که از مسیر <code>/data/2.5/forecast</code> استفاده می‌کند.</li>
      </ul>
    </div>
  </div>

  <script>
    const apiKeyInput = document.getElementById('apiKey');
    const cityInput = document.getElementById('cityInput');
    const btnFetch = document.getElementById('btnFetch');
    const btnForecast = document.getElementById('btnForecast');
    const btnByCoords = document.getElementById('btnByCoords');
    const statusEl = document.getElementById('status');
    const rawEl = document.getElementById('raw');

    // Parsed fields
    const cityNameEl = document.getElementById('cityName');
    const coordEl = document.getElementById('coord');
    const weatherMainEl = document.getElementById('weatherMain');
    const tempEl = document.getElementById('temperature');
    const humidityEl = document.getElementById('humidity');
    const windEl = document.getElementById('wind');
    const cloudsEl = document.getElementById('clouds');
    const visibilityEl = document.getElementById('visibility');
    const sunEl = document.getElementById('sun');
    const timezoneEl = document.getElementById('timezone');
    const rawInfoLink = document.getElementById('rawInfoLink');

    function setStatus(txt, isError = false) {
      statusEl.textContent = "وضعیت: " + txt;
      statusEl.style.color = isError ? '#b91c1c' : '';
    }

    function showRaw(obj) {
      rawEl.textContent = JSON.stringify(obj, null, 2);
    }

    function showParsed(data) {
      // safety checks
      if (!data) return;
      cityNameEl.innerHTML = `<strong>شهر:</strong> ${data.name ?? '—'} (id: ${data.id ?? '—'})`;
      coordEl.innerHTML = `<strong>Coord:</strong> lon=${data.coord?.lon ?? '—'}, lat=${data.coord?.lat ?? '—'}`;
      const w = Array.isArray(data.weather) && data.weather[0] ? data.weather[0] : null;
      weatherMainEl.innerHTML = `<strong>Weather:</strong> ${w ? w.main + " — " + w.description + " (icon: " + w.icon + ")" : '—'}`;
      tempEl.innerHTML = `<strong>Temp:</strong> ${data.main ? data.main.temp + " °C (feels_like: " + data.main.feels_like + " °C)" : '—'}`;
      humidityEl.innerHTML = `<strong>Humidity:</strong> ${data.main?.humidity ?? '—'}%`;
      windEl.innerHTML = `<strong>Wind:</strong> speed=${data.wind?.speed ?? '—'} m/s, deg=${data.wind?.deg ?? '—'}`;
      cloudsEl.innerHTML = `<strong>Clouds:</strong> ${data.clouds?.all ?? '—'}%`;
      visibilityEl.innerHTML = `<strong>Visibility:</strong> ${data.visibility ?? '—'} meters`;
      if (data.sys) {
        const sunrise = data.sys.sunrise ? new Date(data.sys.sunrise * 1000).toLocaleTimeString() : '—';
        const sunset = data.sys.sunset ? new Date(data.sys.sunset * 1000).toLocaleTimeString() : '—';
        sunEl.innerHTML = `<strong>Sun:</strong> sunrise=${sunrise}, sunset=${sunset}, country=${data.sys.country ?? '—'}`;
      } else sunEl.innerHTML = `<strong>Sun:</strong> —`;
      timezoneEl.innerHTML = `<strong>Timezone (shift sec):</strong> ${data.timezone ?? '—'} (local time: ${data.dt ? new Date((data.dt + (data.timezone ?? 0)) * 1000).toLocaleString() : '—'})`;

      // icon link
      if (w && w.icon) {
        rawInfoLink.innerHTML = `<img src="https://openweathermap.org/img/wn/${w.icon}@2x.png" alt="icon" class="inline-block" /> <span class="text-xs">آیکن: ${w.icon}</span>`;
      } else rawInfoLink.innerHTML = '';
    }

    async function fetchWeatherByCity(city, key, units='metric', lang='fa') {
      setStatus('در حال درخواست...');
      const base = 'https://api.openweathermap.org/data/2.5/weather';
      const url = `${base}?q=${encodeURIComponent(city)}&appid=${encodeURIComponent(key)}&units=${units}&lang=${lang}`;
      try {
        const res = await fetch(url);
        if (!res.ok) {
          const errText = await res.text();
          setStatus('خطا: ' + res.status + ' — ' + res.statusText, true);
          rawEl.textContent = `Response non-ok:\n${res.status}\n${errText}`;
          return null;
        }
        const data = await res.json();
        setStatus('دریافت شد ✅');
        showRaw(data);
        showParsed(data);
        return data;
      } catch (err) {
        setStatus('خطا در fetch — بررسی اتصال اینترنت یا CORS', true);
        rawEl.textContent = String(err);
        return null;
      }
    }

    async function fetchWeatherByCoords(lat, lon, key, units='metric', lang='fa') {
      setStatus('در حال درخواست با مختصات...');
      const base = 'https://api.openweathermap.org/data/2.5/weather';
      const url = `${base}?lat=${encodeURIComponent(lat)}&lon=${encodeURIComponent(lon)}&appid=${encodeURIComponent(key)}&units=${units}&lang=${lang}`;
      try {
        const res = await fetch(url);
        if (!res.ok) {
          setStatus('خطا: ' + res.status + ' — ' + res.statusText, true);
          rawEl.textContent = await res.text();
          return null;
        }
        const data = await res.json();
        setStatus('دریافت شد ✅');
        showRaw(data);
        showParsed(data);
        return data;
      } catch (err) {
        setStatus('خطا در fetch — بررسی اتصال اینترنت یا CORS', true);
        rawEl.textContent = String(err);
        return null;
      }
    }

    async function fetchForecast(city, key, units='metric', lang='fa') {
      setStatus('در حال درخواست forecast...');
      const base = 'https://api.openweathermap.org/data/2.5/forecast';
      const url = `${base}?q=${encodeURIComponent(city)}&appid=${encodeURIComponent(key)}&units=${units}&lang=${lang}`;
      try {
        const res = await fetch(url);
        if (!res.ok) {
          setStatus('خطا: ' + res.status + ' — ' + res.statusText, true);
          rawEl.textContent = await res.text();
          return null;
        }
        const data = await res.json();
        setStatus('Forecast دریافت شد ✅');
        showRaw(data);
        // show summary parsed for forecast: first item + city info
        const first = data.list && data.list.length ? data.list[0] : null;
        cityNameEl.innerHTML = `<strong>Forecast for:</strong> ${data.city?.name ?? '—'} (${data.city?.country ?? '—'})`;
        coordEl.innerHTML = `<strong>City coord:</strong> lon=${data.city?.coord?.lon ?? '—'}, lat=${data.city?.coord?.lat ?? '—'}`;
        if (first) {
          weatherMainEl.innerHTML = `<strong>Next forecast:</strong> ${first.weather[0]?.main ?? '—'} — ${first.weather[0]?.description ?? '—'}`;
          tempEl.innerHTML = `<strong>Temp:</strong> ${first.main?.temp ?? '—'} °C (dt_txt: ${first.dt_txt ?? '—'})`;
          humidityEl.innerHTML = `<strong>Humidity:</strong> ${first.main?.humidity ?? '—'}%`;
        } else {
          weatherMainEl.innerHTML = '—';
        }
        return data;
      } catch (err) {
        setStatus('خطا در fetch — بررسی اتصال اینترنت یا CORS', true);
        rawEl.textContent = String(err);
        return null;
      }
    }

    btnFetch.addEventListener('click', () => {
      const key = apiKeyInput.value.trim();
      const city = cityInput.value.trim();
      if (!key || key === 'YOUR_API_KEY_HERE') { alert('لطفاً API Key خود را وارد کنید'); return; }
      if (!city) { alert('نام شهر را وارد کنید'); return; }
      fetchWeatherByCity(city, key);
    });

    btnByCoords.addEventListener('click', () => {
      const key = apiKeyInput.value.trim();
      const lat = document.getElementById('lat').value.trim();
      const lon = document.getElementById('lon').value.trim();
      if (!key || key === 'YOUR_API_KEY_HERE') { alert('لطفاً API Key خود را وارد کنید'); return; }
      if (!lat || !lon) { alert('لطفاً lat و lon را وارد کنید'); return; }
      fetchWeatherByCoords(lat, lon, key);
    });

    btnForecast.addEventListener('click', () => {
      const key = apiKeyInput.value.trim();
      const city = cityInput.value.trim();
      if (!key || key === 'YOUR_API_KEY_HERE') { alert('لطفاً API Key خود را وارد کنید'); return; }
      if (!city) { alert('نام شهر را وارد کنید'); return; }
      fetchForecast(city, key);
    });

    // show online/offline
    window.addEventListener('online', () => setStatus('آنلاین — آماده'));
    window.addEventListener('offline', () => setStatus('آفلاین — نمایش داده‌های کش (در صورت وجود)'));
  </script>
</body>
</html>